scale_y_continuous(label = comma)
# plot actual vs predicted
trips_per_day %>%
ggplot() +
geom_point(aes(x= pred, y = num_trips)) +
scale_y_continuous(label = comma) +
scale_y_continuous(label = comma)
library(tidyverse)
library(dplyr)
library(broom)
library(modelr)
library(scales)
library(here)
library(lubridate)
pa <- 40000/100000
pb <- 40001/100000
power.prop.test(p1= pa, p2=pb, sig.level=0.10, power=0.80, alternative="two.sided")
library(tidyverse)
theme_set(theme_bw())
knitr::opts_chunk$set(echo = TRUE)
num_as_extreme <- sum(sampling_dist >= observed_diff)
# Experiment Check
estimate_bias <- function(n, p) {
mean(rbinom(n,1,p))
}
set.seed(42)
n_treatment <- 34
p_treatment <- 10/34
p_hat_treatment <- replicate(1e4, estimate_bias(n_treatment, p_treatment))
n_control <-16
p_control <- 4/16
p_hat_control <- replicate(1e4, estimate_bias(n_control, p_control))
plot_data <- data.frame(p_hat_diff= p_hat_treatment - p_hat_control)
ggplot(plot_data, aes(x = p_hat_diff)) +
geom_histogram(bins = 15) +
geom_vline(xintercept=observed_diff) +
geom_vline(xintercept= observed_diff, color="red")  +
labs(x = "P_Treatment - P_Control")
# Experiment Check
estimate_bias <- function(n, p) {
mean(rbinom(n,1,p))
}
observed_diff = 10/34 - 4/16
set.seed(42)
n_treatment <- 34
p_treatment <- 10/34
p_hat_treatment <- replicate(1e4, estimate_bias(n_treatment, p_treatment))
n_control <-16
p_control <- 4/16
p_hat_control <- replicate(1e4, estimate_bias(n_control, p_control))
plot_data <- data.frame(p_hat_diff= p_hat_treatment - p_hat_control)
ggplot(plot_data, aes(x = p_hat_diff)) +
geom_histogram(bins = 15) +
geom_vline(xintercept=observed_diff) +
geom_vline(xintercept= observed_diff, color="red")  +
labs(x = "P_Treatment - P_Control")
num_as_extreme <- sum(plot_data$p_hat_diff >= observed_diff)
p_value <- num_as_extreme / length(plot_data$p_hat_diff)
p_value
# diff = 10/34 - 4/16  #0.04411765
n_treatment = 34
n_control = 16
observed_diff = 10/34 - 4/16  #0.04411765
get_difference <- function () {
yawn  <- rep("yawn", 14)
not_yawn <- rep("not_yawn", 36)
all <- sample(c(yawn, not_yawn), replace = FALSE)
treatment_group <- head(all, n_treatment)
control_group <- tail(all, n_control)
p_treatment <- length(which(treatment_group=="yawn"))/n_treatment
p_control <- length(which(control_group=="yawn"))/n_control
diff <- p_treatment - p_control
return(diff)
}
set.seed(42)
sampling_dist <- replicate(1e4, get_difference())
ggplot(data.frame(sampling_dist), aes(x = sampling_dist)) +
geom_histogram() +
geom_vline(xintercept=observed_diff, color = "red") +
labs(x = "P_Treatment - P_Control")
observed_diff <- 10/34 - 4/16  #0.04411765
observed_diff
num_as_extreme <- sum(sampling_dist >= observed_diff)
p_value <- num_as_extreme / length(sampling_dist)
p_value
run_experiment <- function(p_treatment, p_control, n, alpha) {
na <- sum(rbinom(n, 1, p_treatment))
nb <- sum(rbinom(n, 1, p_control))
test <- prop.test(x = c(na, nb), n = c(n, n), alternative="two.sided", conf.level = alpha)
test$p.value < alpha
}
compute_power <- function(p_treatment, p_control, n, alpha, r = 1000) {
mean(replicate(r, run_experiment(p_treatment, p_control, n, alpha)))
}
n = 50
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
N <- seq(100,1000, by = 100)
pow <- c()
for (n in N) {
pow <- c(pow, compute_power(p_treatment, p_control, n, alpha))
}
ggplot(data.frame(N, pow), aes(x = N, y = pow)) +
geom_smooth(color = "gray") +
geom_point()
#MAE calculation
base_mae <- mae(model_baseline, data)
library(tidyverse)
library(dplyr)
library(modelr)
library(scales)
library(lubridate)
library(quantmod)
library(stats)
#MAE calculation
base_mae <- mae(model_baseline, data)
set.seed(42)
data <- read.csv("Autos/Autos/merged.csv") %>% mutate(Period = as.Date(Period))
data <- data %>% mutate(sales = log(sales))
data
#our models
model_baseline <- lm(sales~Lag(sales,1)+Lag(sales,12), data=data)
summary(model_baseline)
model_with_trends <- lm(sales~Lag(sales,1)+Lag(sales,12) + suvs + insurance, data=data)
summary(model_with_trends)
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#MAE calculation
base_mae <- mae(model_baseline, data)
trends_mae <- mae(model_with_trends, data)
base_mae
trends_mae
library(tidyverse)
library(dplyr)
library(modelr)
library(scales)
library(lubridate)
library(quantmod)
library(stats)
library(tidyverse)
library(dplyr)
library(modelr)
library(scales)
library(lubridate)
library(quantmod)
library(stats)
library(tidyverse)
library(dplyr)
library(modelr)
library(scales)
library(lubridate)
library(quantmod)
library(stats)
library(tidyverse)
theme_set(theme_bw())
knitr::opts_chunk$set(echo = TRUE)
# diff = 10/34 - 4/16  #0.04411765
n_treatment = 34
n_control = 16
observed_diff = 10/34 - 4/16  #0.04411765
get_difference <- function () {
yawn  <- rep("yawn", 14)
not_yawn <- rep("not_yawn", 36)
all <- sample(c(yawn, not_yawn), replace = FALSE)
treatment_group <- head(all, n_treatment)
control_group <- tail(all, n_control)
p_treatment <- length(which(treatment_group=="yawn"))/n_treatment
p_control <- length(which(control_group=="yawn"))/n_control
diff <- p_treatment - p_control
return(diff)
}
set.seed(42)
sampling_dist <- replicate(1e4, get_difference())
ggplot(data.frame(sampling_dist), aes(x = sampling_dist)) +
geom_histogram() +
geom_vline(xintercept=observed_diff, color = "red") +
labs(x = "P_Treatment - P_Control")
observed_diff <- 10/34 - 4/16  #0.04411765
observed_diff
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(n, 1, p_treatment)
nb <- rbinom(n, 1, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
p_hat <- replicate(1e3, run_experiment())
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(n_t, 1, p_treatment)
nb <- rbinom(n_c, 1, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
p_hat <- replicate(1e3, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
num_as_extreme <- sum(p_hat >= 0)# if yawning is not contagious, p_treat - p_control =0
power <- num_as_extreme/1000
power
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(1, n_t, p_treatment)
nb <- rbinom(1, n_c, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
p_hat <- replicate(1e3, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
num_as_extreme <- sum(p_hat >= 0)# if yawning is not contagious, p_treat - p_control =0
power <- num_as_extreme/1000
power
p_hat <- replicate(1, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
print(p_hat)
(p_hat)
p_hat <- replicate(6, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
(p_hat)
rbinom
rbinom(1, 34, 10/34)
rbinom(1, 34, 10/34)
rbinom(1, 34, 10/34)
rbinom(1, 34, 10/34)
num_as_extreme <- sum(p_hat <> 0)
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(1, n_t, p_treatment)
nb <- rbinom(1, n_c, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
all_experiments <- replicate(1e3, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
num_as_extreme <- sum(p_hat >= 0)
power <- num_as_extreme/1000
power
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(1, n_t, p_treatment)
nb <- rbinom(1, n_c, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
all_experiments <- replicate(1e3, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
num_as_extreme <- sum(p_hat >= 0)
power <- num_as_extreme/1000
power
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(1, n_t, p_treatment)
nb <- rbinom(1, n_c, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
all_experiments <- replicate(1e3, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
num_as_extreme <- sum(p_hat >= 0)
power <- num_as_extreme/1000
power
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(1, n_t, p_treatment)
nb <- rbinom(1, n_c, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
all_experiments <- replicate(1e3, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
num_as_extreme <- sum(all_experiments >= 0)
power <- num_as_extreme/1000
power
run_experiment <- function(p_treatment, p_control, n_t, n_c, alpha) {
na <- rbinom(1, n_t, p_treatment)
nb <- rbinom(1, n_c, p_control)
na - nb
}
n_t = 34
n_c = 16
p_treatment <- 10/34
p_control <- 4/16
alpha <- 0.05
all_experiments <- replicate(1e3, run_experiment(p_treatment, p_control, n_t, n_c, alpha))
num_as_extreme <- sum(all_experiments >= 0)
power <- num_as_extreme/1000
power
?lag()
?lag()
library(tidyverse)
library(dplyr)
library(modelr)
library(scales)
library(lubridate)
library(stats)
set.seed(42)
data <- read.csv("Autos/Autos/merged.csv") %>% mutate(Period = as.Date(Period))
data <- data %>% mutate(sales = log(sales))
data
setwd("~/coursework/google_trends")
#our models
model_baseline <- lm(sales~lag(sales,1)+lag(sales,12), data=data)
summary(model_baseline)
model_with_trends <- lm(sales~lag(sales,1)+lag(sales,12) + suvs + insurance, data=data)
summary(model_with_trends)
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#MAE calculation
base_mae <- mae(model_baseline, data)
trends_mae <- mae(model_with_trends, data)
base_mae
trends_mae
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#MAE calculation
base_mae <- mae(model_baseline, data)
trends_mae <- mae(model_with_trends, data)
base_mae
trends_mae
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#our models
model_baseline <- lm(sales~lag(sales,1)+lag(sales,12), data=data)
summary(model_baseline)
model_with_trends <- lm(sales~lag(sales,1)+lag(sales,12) + suvs + insurance, data=data)
summary(model_with_trends)
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#add predictions with both models
data_with_pred <- data %>%
filter(Period >= as.Date('2005-06-01')) %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#our models
model_baseline <- lm(sales~lag(sales,1)+lag(sales,12) + e, data=data)
#our models
model_baseline <- lm(sales~lag(sales,1)+lag(sales,12), data=data)
summary(model_baseline)
model_with_trends <- lm(sales~lag(sales,1)+lag(sales,12) + suvs + insurance, data=data)
summary(model_with_trends)
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-05-12')) %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#our models
model_baseline <- lm(sales~lag(sales,1)+lag(sales,12), data=data)
summary(model_baseline)
model_with_trends <- lm(sales~lag(sales,1)+lag(sales,12) + suvs + insurance, data=data)
summary(model_with_trends)
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#our models
model_baseline <- lm(sales~lag(sales, -1)+lag(sales, -12), data=data)
#our models
model_baseline <- lm(sales~lag(sales,1)+lag(sales,12), data=data)
summary(model_baseline)
model_with_trends <- lm(sales~lag(sales,1)+lag(sales,12) + suvs + insurance, data=data)
summary(model_with_trends)
#add predictions with both models
data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
#add predictions with both models
data_with_pred <- data %>%
add_predictions(model_baseline, var ="base") %>%
add_predictions(model_with_trends, var ="trends") %>%
filter(Period >= as.Date('2005-06-01')) %>%
rename(actual = sales)
head(data_with_pred)
#visualizations
data_with_pred %>%
pivot_longer(c("actual", "base", "trends"), names_to = "sales_type", values_to = "num_of_sales") %>%
ggplot(aes(x = Period, y = num_of_sales, group = sales_type, color = sales_type)) +
geom_line(aes(y = num_of_sales, color = sales_type, linetype= sales_type)) +
scale_color_manual(values=c("black", "red", "darkgray")) +
scale_linetype_manual(values=c("solid", "dashed", "solid")) +
labs(x = "Date", y = "Log of Sales")
